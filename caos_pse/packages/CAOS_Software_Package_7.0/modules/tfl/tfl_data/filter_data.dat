; The lines starting with the semicolon are considered
; as comments and are discarded during the file reading.
;
; Each no-commented line describes a filter in terms of
; gain, REAL zeros and REAL poles (no more of 4 zeros and 4 poles).
; This is the only representation of the filters allowed
; when the filter data are loaded from an ascii file:
;
;             (s+z0)*(s+z1)*(s+z2)*(s+z3)
; TF(s) = G * ---------------------------
;             (s+p0)*(s+p1)*(s+p2)*(s+p3)
;
; w_samp = 2*pi/T where T is the sampling time (the
;          time interval between two valid input of
;          the TFL module)
;
; THE PRESENT RELEASE OF THE TFL MODULE DOESN'T SUPPORT COMPLEX
; ZEROS/POLES YET.
;
; The line must have 19 fields separated by one (or more) spaces.
; The fields are (the following ordering is mandatory):
;
; G  :   double.  Gain of the filter.
; nz :   integer. Number of valid zeros, can be 0,1,2,3 or 4
; z0r:   double.  Real part of the first zero. [z0r/w_samp]
; z0i:   double.  must be 0.0 (for future implementations)
; z1r:   double.  Real part of the second zero. [z1r/w_samp]
; z1i:   double.  must be 0.0 (for future implementations)
; z2r:   double.  Real part of the third zero. [z2r/w_samp]
; z2i:   double.  must be 0.0 (for future implementations)
; z3r:   double.  Real part of the fourth zero. [z3r/w_samp]
; z3i:   double.  must be 0.0 (for future implementations)
; np :   integer. Number of valid zeros, can be 0,1,2,3 or 4
; p0r:   double.  Real part of the first pole. [p0r/w_samp]
; p0i:   double.  must be 0.0 (for future implementations)
; p1r:   double.  Real part of the second pole. [p1r/w_samp]
; p1i:   double.  must be 0.0 (for future implementations)
; p2r:   double.  Real part of the third pole. [p2r/w_samp]
; p2i:   double.  must be 0.0 (for future implementations)
; p3r:   double.  Real part of the fourth pole. [p3r/w_samp]
; p3i:   double.  must be 0.0 (for future implementations)
;
; IMPORTANT NOTES: All the 19 fields are mandatory, even if
;                  the number of zeros/poles are less then 4.
;                  In that case the values in the fields
;                  corresponding to the unused zero/poles will be
;                  discarded.
;
; Here is an example, 4 filters:
; 1) Pure integrator. Single pole in 0:      7.5/s
; 2) Pure integrator. Single pole in 0:     18.0/s
; 3) Low-pass. Single pole in 0.01*w_samp:   0.1/(s + 0.1*w_samp)
; 4) Two zeros, Two poles:
;             1d-4*(s + 2.53d-3*w_samp)*(s + 1d-2*w_samp)/(s*(s + 0.12*w_samp))
;
; G    nz z0r      z0i   z1r   z1i   z2r   z2i   z3r   z3i   np p0r   p0i   p1r    p1i   p2r   p2i   p3r   p3i
;
7.5d0  0  0d0      0d0   0d0   0d0   0d0   0d0   0d0   0d0   1  0d0   0d0   0d0    0d0   0d0   0d0   0d0   0d0
18d0   0  0d0      0d0   0d0   0d0   0d0   0d0   0d0   0d0   1  0d0   0d0   0d0    0d0   0d0   0d0   0d0   0d0
0.1d0  0  0d0      0d0   0d0   0d0   0d0   0d0   0d0   0d0   1  1d-1  0d0   0d0    0d0   0d0   0d0   0d0   0d0
1d-4   2  2.53d-3  0d0   1d-2  0d0   0d0   0d0   0d0   0d0   2  0d0   0d0   0.12d0 0d0   0d0   0d0   0d0   0d0